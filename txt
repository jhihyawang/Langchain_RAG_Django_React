# ================== extract_tables 補強 ==================
from PIL import ImageDraw   # 檔頭已 import 可略去

def extract_tables(self, img, page_num, tbl_idx, box):
    try:
        x1, y1, x2, y2 = map(int, box.tolist())
        # ⚑ 1. 保障座標不離譜
        x1, y1 = max(0, x1), max(0, y1)
        x2, y2 = min(img.width-1, x2), min(img.height-1, y2)
        if x2 - x1 < 3 or y2 - y1 < 3:          # 太小就跳過
            log(f"⚠️ Page {page_num} table {tbl_idx}: box too small, skip")
            return None

        tbl_crop = img.crop((x1, y1, x2, y2))
        save_path = os.path.join(
            self.output_dir, "tables", f"page{page_num}_table{tbl_idx+1}.png"
        )
        tbl_crop.save(save_path)

        # ↓ 以下流程照舊 … (若偵測不到 column 時的 fallback 也一樣)

        # …產生 content 變數 …

        # ⚑ 2. 在回傳／寫向量庫前把 None → ""
        return {
            "page": page_num,
            "image": save_path,
            "content": content,
            "media_type": "table",
            "source": save_path                    # 確保不是 None
        }

    except Exception as e:
        log(f"❌ Page {page_num} table {tbl_idx} error: {e}")
        return {
            "page": page_num,
            "image": None,
            "content": f"extract error: {e}",
            "media_type": "table",
            "source": ""
        }


# ================== VectorStoreHandler.add() 補強 ==================
def add(self, content, media_type, page, document_id, title, source):
    if not isinstance(content, str):
        content = str(content) if content is not None else ""
    if not content.strip():
        return False

    # ⚑ 3. 將可能為 None 的欄位轉成 ""
    safe = lambda v: "" if v is None else v
    metadatas = [
        {
            "media_type": safe(media_type),
            "page_number": page,
            "document_id": document_id,
            "source": safe(source),
            "chunk_index": i,
            "title": safe(title)
        } for i in range(len(chunks))
    ]
    ...
