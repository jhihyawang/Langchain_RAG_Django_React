import shutil

def pdf_rotation(self):
    # Step 1: 複製檔案做判斷與旋轉
    temp_path = self.pdf_path + ".rotation_check.pdf"
    shutil.copy(self.pdf_path, temp_path)

    log(f"📄 複製 PDF 檔案至：{temp_path} 用於旋轉處理")

    # 改變 self.pdf_path 指向複製的檔案
    original_path = self.pdf_path
    self.pdf_path = temp_path

    # Step 2: 偵測旋轉頁面
    rotated_pages = self.correction_direction()
    if not rotated_pages:
        log("✅ 無需旋轉頁面")
        os.remove(temp_path)  # 清除複製檔
        self.pdf_path = original_path
        return False

    # Step 3: 對複製檔案進行旋轉
    log(f"🔄 對複製檔案進行旋轉：{temp_path}")
    try:
        doc = fitz.open(temp_path)
        for pg in rotated_pages:
            page = doc[pg - 1]
            page.set_rotation((page.rotation + 90) % 360)

        rotated_output = original_path + ".rotated.pdf"
        doc.save(rotated_output, garbage=4, deflate=True)
        doc.close()

        # Step 4: 替換原始檔案
        os.replace(rotated_output, original_path)
        log(f"✅ 成功旋轉並更新原始檔案：{original_path}")
    except Exception as e:
        log(f"❌ 旋轉過程中發生錯誤：{e}")
    finally:
        # 總是清除暫存檔
        if os.path.exists(temp_path):
            os.remove(temp_path)
        self.pdf_path = original_path

    return True
