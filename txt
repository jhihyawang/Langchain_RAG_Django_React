# 直接顯示每個表格的 DataFrame 並加上語意句欄位，不使用 ace_tools

from typing import List
import pandas as pd

def table_to_sentences(df: pd.DataFrame, orientation: str = "auto") -> List[str]:
    def is_vertical(df):
        first_col = df.iloc[:, 0]
        score = 0
        for val in first_col[: min(5, len(first_col))]:
            if isinstance(val, str) and len(val) <= 15 and not any(char.isdigit() for char in val):
                score += 1
        return score >= 0.6 * min(5, len(first_col))

    sentences = []
    if orientation == "auto":
        orientation = "vertical" if is_vertical(df) else "horizontal"

    if orientation == "horizontal":
        for idx, row in df.iterrows():
            line = []
            for col, val in row.items():
                if pd.notna(val) and str(val).strip() != "":
                    line.append(f"{col.strip()}: {str(val).strip()}")
            if line:
                sentences.append("; ".join(line))

    elif orientation == "vertical":
        header = df.columns.tolist()
        for row in df.itertuples(index=False):
            key = str(row[0]).strip()
            for i in range(1, len(row)):
                value = row[i]
                if pd.notna(value) and str(value).strip() != "":
                    col_name = header[i]
                    sentences.append(f"{key} - {col_name}: {str(value).strip()}")

    return sentences

# 顯示每張表格的原始 df 加上語意句欄位
for table_ix, table in enumerate(conv_res.document.tables):
    df = table.export_to_dataframe()
    orientation = "vertical" if df.shape[1] > df.shape[0] else "horizontal"
    sentences = table_to_sentences(df, orientation=orientation)

    print(f"\n======= Table {table_ix + 1} =======")
    if orientation == "horizontal" and len(sentences) == len(df):
        df = df.copy()
        df["sentence"] = sentences
        print(df)
    else:
        print("🔹 表格為縱向或不規則格式，僅顯示語意句：")
        for s in sentences:
            print(" -", s)
