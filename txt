# tasks.py
import json

from background_task import background
from common.modules.processor.pdf_processor import PdfProcessor
from common.modules.processor.vector_store import VectorStoreHandler
from enterprise_assistant.models import Knowledge


@background(schedule=5)
def process_pdf_background(knowledge_id):
    try:
        knowledge = Knowledge.objects.get(id=knowledge_id)

        # ✅ 若檔案不存在（可能被刪除），自動跳過
        if not knowledge.file or not os.path.exists(knowledge.file.path):
            print(f"❌ 檔案不存在，跳過處理：Knowledge ID {knowledge_id}")
            knowledge.processing_status = "error"
            knowledge.save()
        else:
            # ✅ 設為處理中
            knowledge.processing_status = "processing"
            knowledge.save()

            # ✅ PDF 處理
            processor = PdfProcessor(pdf_path=knowledge.file.path, knowledge_id=knowledge_id)
            result = processor.optimized_process()

            # ✅ 寫入向量庫
            vectorstore = VectorStoreHandler("chroma_user_db")

            for media_type in ["text", "table", "image"]:
                for item in result.get(media_type, []):
                    vectorstore.add(
                        content=item["content"],
                        page=json.dumps(item["page"] if isinstance(item["page"], list) else [item["page"]]),
                        document_id=knowledge_id,
                        media_type=media_type,
                        source=json.dumps(item["source"] if isinstance(item["source"], list) else [item["source"]])
                    )

            # ✅ 更新資料庫資訊
            chunks = vectorstore.list(knowledge_id)
            first_chunk = chunks[0]["content"] if chunks else ""
            knowledge.content = first_chunk
            knowledge.chunk = len(chunks)
            knowledge.processing_status = "done"
            knowledge.save()

    except Exception as e:
        knowledge.processing_status = "error"
        knowledge.save()
        print(f"❌ 處理失敗：{e}")

    # ✅ 無論是否成功都繼續處理下一筆
    next_knowledge = Knowledge.objects.filter(processing_status="pending").order_by("created_at").first()
    if next_knowledge:
        process_pdf_background(next_knowledge.id)
